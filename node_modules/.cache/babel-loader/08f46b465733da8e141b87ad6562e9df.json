{"ast":null,"code":"var _jsxFileName = \"/home/suhaib/Desktop/project1/appprof/app/appr/src/components/Card/Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Card.css';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { UilTimes } from '@iconscout/react-unicons';\nimport { motion, AnimateSharedLayout } from 'framer-motion';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  _s();\n\n  const [expanded, setExpanded] = useState(false);\n  return /*#__PURE__*/_jsxDEV(AnimateSharedLayout, {\n    children: expanded ? /*#__PURE__*/_jsxDEV(ExpandedCard, {\n      param: props,\n      setExpanded: () => setExpanded(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CompactCard, {\n      param: props,\n      setExpanded: () => setExpanded(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}; //CompactCard\n\n\n_s(Card, \"DuL5jiiQQFgbn7gBKAyxwS/H4Ek=\");\n\n_c = Card;\n\nfunction CompactCard(_ref) {\n  let {\n    param,\n    setExpanded\n  } = _ref;\n  const Png = param.png;\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"CompactCard\",\n    style: {\n      background: param.color.background,\n      boxShadow: param.color.boxShadow\n    },\n    onClick: setExpanded,\n    layoutId: \"expandableCard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"radialBar\",\n      children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n        value: param.barValue,\n        text: `${param.barValue}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: param.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail\",\n      children: [/*#__PURE__*/_jsxDEV(Png, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"$\", param.value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"last \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n} //ExpandedCard\n\n\n_c2 = CompactCard;\n\nfunction ExpandedCard(_ref2) {\n  let {\n    param,\n    setExpanded\n  } = _ref2;\n  const data = {\n    options: {\n      chart: {\n        type: 'area',\n        height: 'auto'\n      },\n      dropShadow: {\n        enabled: false,\n        enabledOnSeries: undefined,\n        top: 0,\n        left: 0,\n        blur: 3,\n        color: '#000',\n        opacity: 0.35\n      },\n      fill: {\n        colors: ['#fff'],\n        type: 'gradient'\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'smooth',\n        colors: ['white']\n      },\n      tooltip: {\n        x: {\n          format: 'dd/MM/yy HH:mm'\n        }\n      },\n      grid: {\n        show: true\n      },\n      xaxis: {\n        type: 'datatime',\n        categories: ['2018-09-19T00:00:00.000Z', '2018-09-19T01:30:00.000Z', '2018-09-19T02:30:00.000Z', '2018-09-19T03:30:00.000Z', '2018-09-19T04:30:00.000Z', '2018-09-19T05:30:00.000Z', '2018-09-19T06:30:00.000Z']\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"ExpandedCard\",\n    style: {\n      background: param.color.background,\n      boxShadow: param.color.boxShadow\n    },\n    layoutId: \"expandableCard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        alignSelf: 'flex-end',\n        cursor: 'pointer',\n        color: 'white'\n      },\n      children: /*#__PURE__*/_jsxDEV(UilTimes, {\n        onClick: setExpanded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: param.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chartContainer\",\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        series: param.series,\n        type: \"area\",\n        options: data.options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Last 24 hours\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = ExpandedCard;\nexport default Card;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"CompactCard\");\n$RefreshReg$(_c3, \"ExpandedCard\");","map":{"version":3,"sources":["/home/suhaib/Desktop/project1/appprof/app/appr/src/components/Card/Card.jsx"],"names":["React","useState","CircularProgressbar","UilTimes","motion","AnimateSharedLayout","Chart","Card","props","expanded","setExpanded","CompactCard","param","Png","png","background","color","boxShadow","barValue","title","value","ExpandedCard","data","options","chart","type","height","dropShadow","enabled","enabledOnSeries","undefined","top","left","blur","opacity","fill","colors","dataLabels","stroke","curve","tooltip","x","format","grid","show","xaxis","categories","alignSelf","cursor","series"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './Card.css';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { UilTimes } from '@iconscout/react-unicons';\nimport { motion, AnimateSharedLayout } from 'framer-motion';\nimport Chart from 'react-apexcharts';\nconst Card = (props) => {\n  const [expanded, setExpanded] = useState(false);\n  return (\n    <AnimateSharedLayout>\n      {expanded ? (\n        <ExpandedCard param={props} setExpanded={() => setExpanded(false)} />\n      ) : (\n        <CompactCard param={props} setExpanded={() => setExpanded(true)} />\n      )}\n    </AnimateSharedLayout>\n  );\n};\n\n//CompactCard\n\nfunction CompactCard({ param, setExpanded }) {\n  const Png = param.png;\n  return (\n    <motion.div\n      className=\"CompactCard\"\n      style={{\n        background: param.color.background,\n        boxShadow: param.color.boxShadow,\n      }}\n      onClick={setExpanded}\n      layoutId=\"expandableCard\"\n    >\n      <div className=\"radialBar\">\n        <CircularProgressbar\n          value={param.barValue}\n          text={`${param.barValue}%`}\n        />\n        <span>{param.title}</span>\n      </div>\n      <div className=\"detail\">\n        <Png />\n        <span>${param.value}</span>\n        <span>last </span>\n      </div>\n    </motion.div>\n  );\n}\n\n//ExpandedCard\n\nfunction ExpandedCard({ param, setExpanded }) {\n  const data = {\n    options: {\n      chart: {\n        type: 'area',\n        height: 'auto',\n      },\n      dropShadow: {\n        enabled: false,\n        enabledOnSeries: undefined,\n        top: 0,\n        left: 0,\n        blur: 3,\n        color: '#000',\n        opacity: 0.35,\n      },\n      fill: {\n        colors: ['#fff'],\n        type: 'gradient',\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        curve: 'smooth',\n        colors: ['white'],\n      },\n      tooltip: {\n        x: {\n          format: 'dd/MM/yy HH:mm',\n        },\n      },\n      grid: {\n        show: true,\n      },\n      xaxis: {\n        type: 'datatime',\n        categories: [\n          '2018-09-19T00:00:00.000Z',\n          '2018-09-19T01:30:00.000Z',\n          '2018-09-19T02:30:00.000Z',\n          '2018-09-19T03:30:00.000Z',\n          '2018-09-19T04:30:00.000Z',\n          '2018-09-19T05:30:00.000Z',\n          '2018-09-19T06:30:00.000Z',\n        ],\n      },\n    },\n  };\n  return (\n    <motion.div\n      className=\"ExpandedCard\"\n      style={{\n        background: param.color.background,\n        boxShadow: param.color.boxShadow,\n      }}\n      layoutId=\"expandableCard\"\n    >\n      <div style={{ alignSelf: 'flex-end', cursor: 'pointer', color: 'white' }}>\n        <UilTimes onClick={setExpanded} />\n      </div>\n      <span>{param.title}</span>\n      <div className=\"chartContainer\">\n        <Chart series={param.series} type=\"area\" options={data.options} />\n      </div>\n      <span>Last 24 hours</span>\n    </motion.div>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}